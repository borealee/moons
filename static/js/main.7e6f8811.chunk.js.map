{"version":3,"sources":["logo.svg","moonPresent.jsx","moonLogic.jsx","moonList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MoonPresent","props","date","Date","console","log","prevProps","prevState","snapshot","this","popsAt","parseISO","validEstimation","addHours","timeToPop","toString","style","display","padding","width","Typography","variant","timestampsFuckedUp","List","dense","timestamps","map","timestamp","ListItem","key","id","marginTop","minWidth","utils","DateFnsUtils","DateTimePicker","emptyLabel","label","value","time","ampm","fullWidth","disableFuture","onChange","ev","updateTimstampDate","TextField","marginLeft","name","error","isNaN","distanceToPop","helperText","updateTimestamp","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","removeTimestamp","Divider","Button","addTimestamp","Component","MoonLogic","recalculate","validateTimestamps","sortedTimestamps","fuckedUp","ts","parseInt","sort","a","b","i","length","isAfter","isBefore","setState","draft","_persist","moonId","state","produce","push","uuidv4","calculateTimeToPop","newDate","find","persist","target","filter","calculateSpeed","timestamp1","timestamp2","formattedDate1","formattedDate2","hourDifference","differenceInHours","distance","Math","abs","speed","updateChunkSpeed","newSpeed","chunkSpeed","updatePopDistance","popDistance","times","maxTimestamp","max","speeds","avgSpeed","reduce","curr","acc","biggestTimestamp","match","localStorage","setItem","JSON","stringify","chunkToPopDistance","localStorageState","parse","getItem","moonName","MoonList","openMoon","moonList","moon","open","moon2","addMoon","updateMoon","removeMoon","moons","Collapse","in","timeout","unmountOnExit","component","moonData","data","color","App","className","Grid","container","item","xs","React","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7e6f8811.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {DatePicker, DateTimePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {addHours, parseISO} from 'date-fns';\n\nclass MoonPresent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.date = new Date();\n\t\tconsole.log(\"props 111: \" , this.props);\n\t}\n\t\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tconsole.log(\"curr props: \" , this.props)\n\t}\n\t\n\trender() {\n\t\t\n\t\t// console.log(\"Fucked up: \" , this.props.timestampsFuckedUp);\n\t\tconsole.log(\"popsat: \" , this.props.popsAt);\n\t\tlet popsAt = this.props.popsAt;\n\t\tif (typeof this.props.popsAt == \"string\") {\n\t\t\tpopsAt=parseISO(popsAt)\n\t\t}\n\t\t\n\t\tconst validEstimation = `${addHours(popsAt, this.props.timeToPop).toString()} (± ${this.props.timeToPop} hrs)`\n\t\treturn <div style={{display: \"block\", padding: \"24px\", width: \"100%\"}}>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tMoon pops: {this.props.timestampsFuckedUp ? \"Fucked up timestamps\" : validEstimation}\n\t\t\t</Typography>\n\t\t\t<Typography>\n\t\t\t\tBookmarks\n\t\t\t</Typography>\n\t\t\t<Typography>{this.props.timestampsFuckedUp ? \"Bro timestamps are fucked\" : null}</Typography>\n\t\t\t<List dense={true}>\n\t\t\t\t{this.props.timestamps.map(timestamp => {\n\t\t\t\t\treturn <ListItem key={timestamp.id} style={{marginTop: \"8px\"}}>\n\t\t\t\t\t\t{/*<ListItemAvatar>*/}\n\t\t\t\t\t\t{/*</ListItemAvatar>*/}\n\t\t\t\t\t\t<div style={{minWidth: \"250px\"}}>\n\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\t\t\t\temptyLabel={\"\"}\n\t\t\t\t\t\t\t\t\tlabel=\"Date (use evetime dipshit)\"\n\t\t\t\t\t\t\t\t\t// value={timestamp.time}\n\t\t\t\t\t\t\t\t\tvalue={timestamp.time}\n\t\t\t\t\t\t\t\t\tampm={false}\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\tdisableFuture={true}\n\t\t\t\t\t\t\t\t\tonChange={(ev) => this.props.updateTimstampDate(timestamp.id, ev)}\n\t\t\t\t\t\t\t\t\t// format=\"yyyy/MM/dd\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<TextField label=\"Distance to pop (km)\"\n\t\t\t\t\t\t           variant=\"outlined\"\n\t\t\t\t\t\t           style={{marginLeft: \"8px\"}}\n\t\t\t\t\t\t           name=\"distanceToPop\"\n\t\t\t\t\t\t           error={isNaN(timestamp.distanceToPop) ? \"Are you fucking retarded?\" : null}\n\t\t\t\t\t\t           helperText={isNaN(timestamp.distanceToPop) ? \"Are you fucking retarded?\" : null}\n\t\t\t\t\t\t           value={timestamp.distanceToPop}\n\t\t\t\t\t\t           onChange={(ev) => this.props.updateTimestamp(timestamp.id, ev)}/>\n\t\t\t\t\t\t{/*<ListItemText*/}\n\t\t\t\t\t\t{/*\tprimary={timestamp.time.toString()}*/}\n\t\t\t\t\t\t{/*\tsecondary={'Secondary text'}*/}\n\t\t\t\t\t\t{/*/>*/}\n\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t{/* eslint-disable-next-line react/jsx-no-undef */}\n\t\t\t\t\t\t\t<IconButton edge=\"end\" aria-label=\"delete\"\n\t\t\t\t\t\t\t            onClick={() => this.props.removeTimestamp(timestamp.id)}>\n\t\t\t\t\t\t\t\t<DeleteIcon/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t</ListItem>\n\t\t\t\t})}\n\t\t\t</List>\n\t\t\t<Divider/>\n\t\t\t<Button onClick={this.props.addTimestamp} style={{marginTop: \"8px\"}}>Add bookmark</Button>\n\t\t</div>\n\t}\n}\n\nexport default (MoonPresent)\n","import React, {Component} from 'react';\nimport MoonPresent from \"./moonPresent\";\nimport produce from \"immer\";\nimport {differenceInHours, max, parseISO, isAfter, isBefore} from 'date-fns';\nimport {v4 as uuidv4} from 'uuid';\n\nclass MoonLogic extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchunkToPopDistance: 0,\n\t\t\tchunkSpeed: 0,\n\t\t\ttimeToPop: 0,\n\t\t\tpopsAt: new Date(),\n\t\t\tpopDistance: 200,\n\t\t\tfuckedUp: false,\n\t\t\ttimestamps: [\n\t\t\t\t{\n\t\t\t\t\tid: 0,\n\t\t\t\t\ttime: new Date(),\n\t\t\t\t\tdistanceToPop: 200\n\t\t\t\t}\n\t\t\t],\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n\t\t\n\t\t// console.log(\"props: \", JSON.parse(localStorage.getItem(\"moonList\")));\n\t\t// fetch moon data from cookie\n\t\t// const localStorageState = JSON.parse(localStorage.getItem(\"moonList\")).find(moon => moon.id === this.props.moonId);\n\t\tconst localStorageState = JSON.parse(localStorage.getItem(this.props.moonId));\n\t\t// console.log(\"local: \", localStorageState)\n\t\tthis.setState(produce(draft => {\n\t\t\treturn draft = localStorageState;\n\t\t}), () => {});\n\t}\n\t\n\trecalculate = () => {\n\t\t// recalculate the whole thing\n\t};\n\t\n\tvalidateTimestamps = (timestamps) => {\n\t\tlet fuckedUp = false;\n\t\tlet sortedTimestamps = [];\n\t\tconsole.log(\"timestamps: \" , timestamps)\n\t\tfunction compare(a, b) {\n\t\t\tif (a.distanceToPop < b.distanceToPop) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a.distanceToPop > b.distanceToPop) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tsortedTimestamps = [...timestamps.map(ts => {\n\t\t\tif (typeof ts.time == \"string\") {\n\t\t\t\treturn {...ts, time: parseISO(ts.time), distanceToPop: parseInt(ts.distanceToPop, 10)}\n\t\t\t} else {\n\t\t\t\treturn {...ts, distanceToPop: parseInt(ts.distanceToPop, 10)}\n\t\t\t}\n\t\t})].sort(compare);\n\t\t\n\t\tfor (let i = 0; i < sortedTimestamps.length - 1; i++) {\n\t\t\tconsole.log(\"sort: \", sortedTimestamps[i+1], i+1)\n\t\t\tconsole.log(\"isAfter: \", isAfter(sortedTimestamps[i].time, sortedTimestamps[i + 1].time), sortedTimestamps[i].time, sortedTimestamps[i + 1].time);\n\t\t\tconsole.log(\"isBefore: \", isBefore(sortedTimestamps[i].time, sortedTimestamps[i + 1].time), sortedTimestamps[i].time, sortedTimestamps[i + 1].time)\n\t\t\tif (!isAfter(sortedTimestamps[i].time, sortedTimestamps[i + 1].time)) {\n\t\t\t\tfuckedUp = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.setState(draft => {\n\t\t\tdraft.fuckedUp = fuckedUp;\n\t\t}, () => this._persist(this.props.moonId, this.state))\n\t\t\n\t\tconsole.log(\"sorted: \", sortedTimestamps);\n\t};\n\t\n\taddTimestamp = () => {\n\t\tthis.setState(produce(draft => {\n\t\t\t\tdraft.timestamps.push({\n\t\t\t\t\tid: uuidv4(),\n\t\t\t\t\ttime: new Date(),\n\t\t\t\t\tdistanceToPop: 0\n\t\t\t\t})\n\t\t\t}), () => {\n\t\t\t\tconst timeToPop = this.calculateTimeToPop(this.state.timestamps);\n\t\t\t\tconsole.log(timeToPop);\n\t\t\t\tthis.setState(produce(draft => {\n\t\t\t\t\tdraft.timeToPop = timeToPop\n\t\t\t\t}));\n\t\t\t\tthis._persist(this.props.moonId, this.state);\n\t\t\t\tthis.validateTimestamps(this.state.timestamps);\n\t\t\t}\n\t\t)\n\t};\n\t\n\tupdateTimstampDate = (id, newDate) => {\n\t\tthis.setState(produce(draft => {\n\t\t\t\tdraft.timestamps.find(ts => ts.id === id).time = newDate;\n\t\t\t}), () => {\n\t\t\t\t// console.log(\"updated: \", id, \" time: \", this.state.timestamps.find(ts => ts.id === id).time)\n\t\t\t\tconst timeToPop = this.calculateTimeToPop(this.state.timestamps);\n\t\t\t\tthis.setState(produce(draft => {\n\t\t\t\t\tdraft.timeToPop = timeToPop\n\t\t\t\t}));\n\t\t\t\tthis._persist(this.props.moonId, this.state)\n\t\t\t\tthis.validateTimestamps(this.state.timestamps);\n\t\t\t}\n\t\t)\n\t};\n\t\n\tupdateTimestamp = (id, ev) => {\n\t\tev.persist();\n\t\tthis.setState(produce(draft => {\n\t\t\t\tdraft.timestamps.find(ts => ts.id === id)[ev.target.name] = ev.target.value;\n\t\t\t}), () => {\n\t\t\t\tconst timeToPop = this.calculateTimeToPop(this.state.timestamps);\n\t\t\t\tthis.setState(produce(draft => {\n\t\t\t\t\tdraft.timeToPop = timeToPop\n\t\t\t\t}));\n\t\t\t\tthis._persist(this.props.moonId, this.state)\n\t\t\t\tthis.validateTimestamps(this.state.timestamps);\n\t\t\t}\n\t\t)\n\t};\n\t\n\tremoveTimestamp = (id) => {\n\t\tthis.setState(produce(draft => {\n\t\t\tdraft.timestamps = draft.timestamps.filter(timestamp => timestamp.id !== id)\n\t\t}), () => {\n\t\t\tconst timeToPop = this.calculateTimeToPop(this.state.timestamps);\n\t\t\tthis.setState(produce(draft => {\n\t\t\t\tdraft.timeToPop = timeToPop\n\t\t\t}));\n\t\t\tthis._persist(this.props.moonId, this.state)\n\t\t\tthis.validateTimestamps(this.state.timestamps);\n\t\t})\n\t};\n\t\n\tcalculateSpeed = (timestamp1, timestamp2) => {\n\t\t\n\t\tlet formattedDate1 = timestamp1.time;\n\t\tlet formattedDate2 = timestamp2.time;\n\t\t\n\t\tconsole.log(\"type: \", typeof formattedDate1, typeof formattedDate2)\n\t\t\n\t\tif (typeof formattedDate1 == \"string\") {\n\t\t\tformattedDate1 = parseISO(timestamp1.time)\n\t\t}\n\t\t\n\t\tif (typeof formattedDate2 == \"string\") {\n\t\t\tconsole.log(\"<<<<<<<\")\n\t\t\tformattedDate2 = parseISO(timestamp2.time)\n\t\t}\n\t\t\n\t\t// try {\n\t\t// \tformattedDate1 = parseISO(timestamp1.time)\n\t\t// } catch (e) {\n\t\t// \tconsole.error(\"failed to format date 1: \", timestamp1)\n\t\t// }\n\t\t//\n\t\t// try {\n\t\t// \tformattedDate2 = parseISO(timestamp2.time)\n\t\t// } catch (e) {\n\t\t// \tconsole.error(\"failed to format date 2: \" , timestamp2)\n\t\t// }\n\t\t\n\t\t\n\t\tconst hourDifference = differenceInHours(formattedDate1, formattedDate2);\n\t\tconst distance = Math.abs(timestamp1.distanceToPop - timestamp2.distanceToPop);\n\t\tconst speed = distance / Math.abs(hourDifference);\n\t\tconsole.log(formattedDate1, formattedDate2)\n\t\tconsole.log(\"distance: \", distance)\n\t\tconsole.log(\"speed: \", speed, \"hour diff: \" , Math.abs(hourDifference))\n\t\t\n\t\treturn speed;\n\t};\n\t\n\tupdateChunkSpeed = (newSpeed) => {\n\t\tthis.setState(produce(draft => {\n\t\t\tdraft.chunkSpeed = newSpeed\n\t\t}))\n\t};\n\t\n\tupdatePopDistance = (popDistance) => {\n\t\tthis.setState(produce(draft => {\n\t\t\tdraft.popDistance = popDistance\n\t\t}))\n\t};\n\t\n\tcalculateTimeToPop = (timestamps) => {\n\t\tconst times = timestamps.map(ts => parseISO(ts.time));\n\t\tconst maxTimestamp = max(times);\n\t\tconst speeds = [];\n\t\tlet timeToPop = 0;\n\t\t\n\t\tconsole.log(\"length:\", timestamps.length)\n\t\tconsole.log(\"lll: \", times);\n\t\t\n\t\tif (timestamps.length >= 2) {\n\t\t\tfor (let i = 0; i < timestamps.length - 1; i++) {\n\t\t\t\tconsole.log(\"speed1: \", timestamps[i], timestamps[i + 1])\n\t\t\t\tspeeds.push(this.calculateSpeed(timestamps[i], timestamps[i + 1]))\n\t\t\t}\n\t\t\t\n\t\t\tconsole.log(\"speeds: \", speeds)\n\t\t\tconst avgSpeed = speeds.reduce((curr, acc) => curr + acc) / (timestamps.length - 1);\n\t\t\tconsole.log(\"avg speed: \", avgSpeed, \"max timestmp: \", maxTimestamp.toString());\n\t\t\t\n\t\t\tconst biggestTimestamp = timestamps.find(ts => {\n\t\t\t\tconsole.log(\"ts time: \", ts.time, maxTimestamp.toString())\n\t\t\t\treturn parseISO(ts.time) == maxTimestamp.toString()\n\t\t\t})\n\t\t\t\n\t\t\tconsole.log(\"biggest: \", biggestTimestamp)\n\t\t\t\n\t\t\ttimeToPop = biggestTimestamp.distanceToPop / avgSpeed;\n\t\t}\n\t\t\n\t\tconsole.log(\"time to pop: \", timeToPop)\n\t\tif (isNaN(timeToPop)) {\n\t\t\treturn 0\n\t\t} else {\n\t\t\treturn timeToPop.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0];\n\t\t}\n\t};\n\t\n\t_persist = (key, value) => {\n\t\tlocalStorage.setItem(key, JSON.stringify(value))\n\t};\n\t\n\trender() {\n\t\treturn <MoonPresent moonName={this.props.moonName}\n\t\t                    moonId={this.props.moonId}\n\t\t                    timestampsFuckedUp={this.state.fuckedUp}\n\t\t                    addTimestamp={this.addTimestamp}\n\t\t                    updateTimestamp={this.updateTimestamp}\n\t\t                    updateTimstampDate={this.updateTimstampDate}\n\t\t                    removeTimestamp={this.removeTimestamp}\n\t\t                    chunkSpeed={this.state.chunkSpeed}\n\t\t                    popsAt={this.state.popsAt}\n\t\t                    timeToPop={this.state.timeToPop}\n\t\t                    timestamps={this.state.timestamps}/>\n\t}\n}\n\nexport default (MoonLogic)\n","import React, {Component} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MoonLogic from \"./moonLogic\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport produce from \"immer\";\nimport {v4 as uuidv4} from 'uuid';\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass MoonList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.open = false;\n\t\tthis.state = {\n\t\t\tmoonList: []\n\t\t};\n\t\t\n\t\t// localStorage.setItem(\"moonList\", JSON.stringify([\n\t\t// \t{\n\t\t// \t\tid: 1,\n\t\t// \t\tname: \"moon1\",\n\t\t// \t\tchunkToPopDistance: 0,\n\t\t// \t\tchunkSpeed: 0,\n\t\t// \t\ttimeToPop: 0,\n\t\t// \t\tpopsAt: new Date(),\n\t\t// \t\tpopDistance: 200,\n\t\t// \t\ttimestamps: [\n\t\t// \t\t\t{\n\t\t// \t\t\t\tid: 0,\n\t\t// \t\t\t\ttime: new Date(),\n\t\t// \t\t\t\tdistanceToPop: 200\n\t\t// \t\t\t}\n\t\t// \t\t],\n\t\t// \t}\n\t\t// ]))\n\t\t\n\t\t// localStorage.setItem(\"1\", JSON.stringify({\n\t\t// \tchunkToPopDistance: 0,\n\t\t// \tchunkSpeed: 0,\n\t\t// \ttimeToPop: 0,\n\t\t// \tpopsAt: new Date(),\n\t\t// \tpopDistance: 200,\n\t\t// \ttimestamps: [\n\t\t// \t\t{\n\t\t// \t\t\tid: 0,\n\t\t// \t\t\ttime: new Date(),\n\t\t// \t\t\tdistanceToPop: 200\n\t\t// \t\t}\n\t\t// \t]\n\t\t// }))\n\t}\n\t\n\tcomponentDidMount() {\n\t\t// read cookie data\n\t\tconst moons = JSON.parse(localStorage.getItem(\"moonList\"));\n\t\tthis.setState(produce(draft => {\n\t\t\tdraft.moonList = moons\n\t\t}))\n\t}\n\t\n\t// componentWillUnmount() {\n\t// \tlocalStorage.setItem(\"moonList\", JSON.stringify(this.state.moonList))\n\t// }\n\t\n\topenMoon = (id) => {\n\t\tthis.setState(produce(draft => {\n\t\t\tdraft.moonList.find(moon => moon.id === id).open = !this.state.moonList.find(moon2 => moon2.id === id).open;\n\t\t}), () => this._persist(\"moonList\", this.state.moonList))\n\t};\n\t\n\taddMoon = () => {\n\t\tthis.setState(produce(draft => {\n\t\t\tdraft.moonList.push({\n\t\t\t\tid: uuidv4(),\n\t\t\t\tname: \"New moon\"\n\t\t\t})\n\t\t}), () => this._persist(\"moonList\", this.state.moonList))\n\t};\n\t\n\tupdateMoon = (id, ev) => {\n\t\tev.persist();\n\t\tthis.setState(produce(draft => {\n\t\t\tdraft.moonList.find(moon => moon.id === id)[ev.target.name] = ev.target.value\n\t\t}), () => this._persist(\"moonList\", this.state.moonList))\n\t};\n\t\n\tremoveMoon = (id) => {\n\t\tthis.setState(produce(draft => {\n\t\t\tdraft.moonList = this.state.moonList.filter(moon => moon.id !== id)\n\t\t}),() => this._persist(\"moonList\", this.state.moonList))\n\t};\n\t\n\t_persist = (key, value) => {\n\t\tlocalStorage.setItem(key, JSON.stringify(value))\n\t};\n\t\n\trender() {\n\t\treturn <div>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tMoons\n\t\t\t</Typography>\n\t\t\t<List>\n\t\t\t\t{this.state.moonList.map(moon => {\n\t\t\t\t\treturn [<ListItem style={{display: \"block\"}}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={moon.name}\n\t\t\t\t\t\t\tname={\"name\"}\n\t\t\t\t\t\t\tonChange={(ev) => this.updateMoon(moon.id, ev)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button onClick={(ev) => this.removeMoon(moon.id)}>DELETE</Button>\n\t\t\t\t\t\t{/*<ListItemText*/}\n\t\t\t\t\t\t{/*\tprimary={moon.name}*/}\n\t\t\t\t\t\t{/*\tsecondary={'Pops in: // TODO'}*/}\n\t\t\t\t\t\t{/*/>*/}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t{/* eslint-disable-next-line react/jsx-no-undef */}\n\t\t\t\t\t\t\t<IconButton edge=\"end\" aria-label=\"delete\" onClick={() => this.openMoon(moon.id)}>\n\t\t\t\t\t\t\t\t{moon.open ? <ExpandLess/> : <ExpandMore/>}\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t</ListItem>,\n\t\t\t\t\t\t<Collapse in={moon.open} timeout=\"auto\" unmountOnExit>\n\t\t\t\t\t\t\t<List component=\"div\">\n\t\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t\t<MoonLogic moonName={moon.name} moonId={moon.id} moonData={moon.data}/>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\n\t\t\t\t\t]\n\t\t\t\t})}\n\t\t\t</List>\n\t\t\t<Button onClick={this.addMoon} fullWidth color=\"primary\"> Add\n\t\t\t\tmoon </Button>\n\t\t</div>\n\t}\n}\n\nexport default (MoonList)\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from \"@material-ui/core/Button\";\nimport MoonLogic from \"./moonLogic\";\nimport MoonList from \"./moonList\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                {/*<header className=\"App-header\">*/}\n                {/*    <img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n                {/*    <p>*/}\n                {/*        Edit <code>src/App.js</code> and save to reload.*/}\n                {/*    </p>*/}\n                {/*    <a*/}\n                {/*        className=\"App-link\"*/}\n                {/*        href=\"https://reactjs.org\"*/}\n                {/*        target=\"_blank\"*/}\n                {/*        rel=\"noopener noreferrer\"*/}\n                {/*    >*/}\n                {/*        Learn React*/}\n                {/*    </a>*/}\n                {/*</header>*/}\n            \n                <div>\n                    <Grid container>\n                        <Grid item xs={6}>\n                    {/*<MoonLogic/>*/}\n                    <MoonList/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            Help\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}